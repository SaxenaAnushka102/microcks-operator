# Optional and additional features configuration
features.feature.microcks-hub.enabled={spec.features.microcksHub.enabled ?: 'false'}
features.feature.microcks-hub.endpoint=https://hub.microcks.io/api
features.feature.microcks-hub.allowed-roles={spec.features.microcksHub.allowedRoles ?: 'admin,manager,manager-any'}

features.feature.repository-filter.enabled={spec.features.repositoryFilter.enabled ?: 'false'}
features.feature.repository-filter.label-key={spec.features.repositoryFilter.labelKey ?: 'domain'}
features.feature.repository-filter.label-label={spec.features.repositoryFilter.labelLabel ?: 'Domain'}
features.feature.repository-filter.label-list={spec.features.repositoryFilter.labelList ?: 'domain,status'}

features.feature.repository-tenancy.enabled={spec.features.repositoryTenancy.enabled ?: 'false'}
features.feature.repository-tenancy.artifact-import-allowed-roles={spec.features.repositoryTenancy.artifactImportAllowedRoles ?: 'admin,manager,manager-any'}

features.feature.async-api.enabled={spec.features.async.enabled ?: 'false'}
features.feature.async-api.default-binding={spec.features.async.defaultBinding ?: 'KAFKA'}

{#if spec.features.async.kafka.install && spec.features.async.kafka.url == null}
features.feature.async-api.endpoint-KAFKA={name}-kafka-kafka-bootstrap.<apps-subdomain>:443
{#else if spec.features.async.kafka.install && spec.features.async.kafka.url != null}
features.feature.async-api.endpoint-KAFKA={name}-kafka-kafka-bootstrap.{spec.features.async.kafka.url}:443
{#else if !spec.features.async.kafka.install && spec.features.async.kafka.url != null}
features.feature.async-api.endpoint-KAFKA={spec.features.async.kafka.url}
{/if}

{#if spec.features.async.mqtt != null && spec.features.async.mqtt.url != null}
features.feature.async-api.endpoint-MQTT={spec.features.async.mqtt.url}
{/if}

{#if spec.features.async.amqp != null && spec.features.async.amqp.url != null}
features.feature.async-api.endpoint-AMQP={spec.features.async.amqp.url}
{/if}

{#if spec.features.async.nats != null && spec.features.async.nats.url != null}
features.feature.async-api.endpoint-NATS={spec.features.async.nats.url}
{/if}

{#if spec.features.async.googlepubsub != null && spec.features.async.googlepubsub.project != null}
features.feature.async-api.endpoint-GOOGLEPUBSUB={spec.features.async.googlepubsub.project}
{/if}

features.feature.async-api.endpoint-WS=