kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: "{{name}}"
    container: keycloak-postgresql
    group: microcks
    app.kubernetes.io/component: keycloak-postgresql
    app.kubernetes.io/managed-by: microcks-operator
    app.openshift.io/runtime: postgresql
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "{{name}}"
      deployment: keycloak-postgresql
      container: keycloak-postgresql
      group: microcks
  template:
    metadata:
      labels:
        app: "{{name}}"
        deployment: keycloak-postgresql
        container: keycloak-postgresql
        group: microcks
    spec:
      containers:
        - name: keycloak-postgresql
          image: "{{keycloak.postgres_image}}"
          args: ["-c", "max_connections=100", "-c", "shared_buffers=12MB"]
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
                - "/bin/sh"
                - "-i"
                - "-c"
                - psql 127.0.0.1 -U ${POSTGRES_USER} -q -d ${POSTGRES_DB} -c 'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
          env:
            - name: POSTGRES_DB
              value: root
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: "keycloak-postgresql-data"
              mountPath: "/var/lib/pgsql/data"
              subPath: pgdata
      terminationGracePeriodSeconds: 60
      volumes:
        - name: "keycloak-postgresql-data"